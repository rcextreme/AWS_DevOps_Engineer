I. Course Overview

II. Course Introduction
    Exam Blue Print Overview
    
    Course Overview
    -Understandingg AWS Security Best practices
    -Implementing Delegation and Federation
    -Protecting Data In-Flight and at Rest
    -Enablign IT Governance with AWS Services
    
    
    
III. Understanding AWS Security Best Practices

III.I Introduction

III.II Understanding the Shared Responsibility Model 3min
    Lecture:
    -AWS manages phsical access to the data centers
    -AWS manages the individual services for uptime and access: Compute, Storage, Networking, Regions, AZs, Edge Locations
    -Customer manages
      -OS/Config, Firewall, Apps, Client Side Encrypting, server side encryption, Authentication and Access Control
      
      
III.III Enabling Security with IAM Users and Groups
    
    Exercise: Securing IAM
      -Login to AWS and complete the Security Status checks
      -Create a user account
      -Create and Admin Group and add user to account
      -Login using the user account
    
    Exam notes:
      -Don't use root account to login
      -Don't have SSH keys on root account
      -Try to assign permission to users via groups instead of adding a policy directly to the user
      -Try not to use the generic ADMIN policy.  Try to create specific permission policies for each user.

III.IV Using IAM Roles for EC2 Instances

    Exercise: Adding a Role on an EC2 instance
        -Create a role to interface with CloudWatch so instance can upload custom metric data.
          you could do this by providing the user keys to the CLoudWatch agent but it's not as secured
        -Launch an instance with the Role
        -Display the temporary access keys via the instances metadata
            # curl http://169.254.169.254/latest/meta-data/iam/security-credentials/CWRole
    
    Exam notes:
        -Roles can only be assigned during launch of an instance.
        -It's more secure to use roles instead of user Keys
        -the AWS cli and SDKs automatically are able to access keys provided by a role. So the API calls
          will be authenticated by default
        -You can develop a custom App that can use the temporary access keys provided by a Role.
        -Amazon throught the day refreshes the temporary access keys provided by a role.
          You can view these keys via the instance's metadata
          
        
III.V Following the Principle of Least Privilege with IAM Policies
    
    Exercise: Creating a restrictive/custom S3 policy
        -Display the S3FullAccess Policy
        -Modify this policy to allow only list&upload permision to a specific bucket
          from a specific IP address
        -Test this policy by uploading a file with 'aws s3 ls' and 'aws s3 cp'
    
    Exam notes:
        -Remember principle of Least Privilege

III.VI Enabling Multifactor Authentication
    
    Exercise: Enabling MFA
        

III.VII Implemting an IAM Password Policy 
    
    Exercise: Enable an IAM passowrd policy
        -Enable a policy an a user
        -Display the Security Token Service in the IAM Dashboard.  
        
    Exam notes:
        -Enable an IAM password policy if a user needs access to the AWZ Console
            For password complexity and expiration
        -If a password is expired a user can still use access keys. they're separate
        -Password xcomplexit setting aren't enforced on current password. Only on next 
         time password is set
        -Password expiration rules take effect immediately. 
        -You can download an IAM  Credentials Report to see details regarding user's passwords.
        -Security Token Service (STS) is what generates the temporary access keys for Roles
    

III.VIII Securing Access to EC2 Instances
        Lecture:
            -Let's review these practices so they're fresh in your mind for the Exam.
            -Implement Security Groups to restrict access to instances.  Use least access method
            -Amazon recommends that you lock down your security groups to a single source IP or 
              traffic from another security group
            -A common approach is to use a private Subnet if possible.  Then leverage a NAT GW 
              for patches, etc.  show diagram
            -You can set IP forwaring in your NAT GW to forward say port 22 to your instance.
              This way you're only broadcasting one IP address
            
        
        
III.IX Auditing Security with AWS Trusted Advisor
        Exercise: Using Trusted Advisor
            -Open TA and analyze the Dashboard for Recommended Actions
            -The TA dashboard has a page for each of these
                Cost Optimization
                Performance
                Security
                Fault Tolerance
        
        For Exam:
            -TA is designed to help you optimze AWS setting to:
                Reduce Cost
                Improve Performacne
            -TA has a list of FREE security check
            -TA has additional checks you can purchas
            -
III.X Module Summary



IV. Implementing Delegation and Federation

V. Protecting Data In-Flight and at Rest

VI. Enabling IT Goverancne with AWS Services

