I Overview
    DevOps includes monitoring and measuring everything
    

II Introduction
   Series Overview
   What you can expect from this course
     - cloudwatch
     - monitoring with custom cloudwatch metrics
     - creating CW alarms
     - monitoring API calls with CT
     - monitoring LOG files with CW
     - Working with CW events

III  Getting Started with CloudWatch

  III.I CW Overview
    Key Components
        Monitor AWS resources with standard metrics
        Monitor with Custom Metrics
        Monitor and store logs
        Set alarms
        view graphs and statistics
        monitor and react to changes
    
    Open AWS console and connect to CW
      - View metrics for created resources
    
    You can see CW metrics also from the EC2 service
      EC2->Monitoring
    
    Discuss System Status checks vs instance status checks
    
    review EBS metrics
    
    notice metrics are only stored for 2weeks
    
    You can created your own Dashboard in CW
    
    CPU Utilization 
    Adding text widgets
    
    
   
  III.II Basic vs Detailed Monitoring
    View basic monitoring of an instance in EC2 Dashboard
      -Basic monitoring logs to CW Every 5mins
      -Detailed monitoring logs data every 1min
        -is enabled per ec2 instance
     
     Enable detailed monitoring on a instnance during launch & after created
     
     Enable detailed monitoring via CLI
       # aws ec2 monitor-instances --instance-ids <instance_id>
       # aws ec2 unmonitor-instances --instance-ids <Id>
       you can do it while launching instance
       # aws ec2 run-instances --image-id ami-09092360 Enabled=true
     
     
     Aggregating metrics.  Only available for detailed monitoring
     
     
  III.III Metrics, Namespaces and Dimensions
    Definitions
      -metric : the thing we want to monitor (i.e cpu, memory)
      -Data Points: are gathered over time for a metric
      -Namespace: these are logical groupings of metrics (i.e ec2, ebs)
        -You could have a metric called CPU Utilization in different namespaces
      -Dimension: This is a filter to sort a metric.  For exame you could display CPU IO
         for an Instance or an ImageID
      
      -Open the CloudWatch User Guide and view all the default namespaces and their dimensions
     
 
 III.IV Viewing and Searching for Metrics
   -The CW dashboard won't display metrics for services you haven't configured in that region
   -Searchin for metrics by typing a string (i.e write)
   -When you're viewing a metric you can do Actions->Add_to_dashboar or actions->share to share url to
   
   -You can figure out all the metrics CW tracks via the User Guide or via the CLI
     i.e: to list all ec2 metrics
     # aws cloudwatch list-metrics --namespace 'AWS/EC2'
     # aws cloudwatch list-metrics --namespace 'AWS/EBS'

III.V Getting Statistics for a Metric
      -CW only keeps 2weeks worth of stats for a metric.  To keep it longer you'll have to export the data
      
      -Some commands to view and export metric stats 
      # aws cloudwatch get-metric-statistics --namespace AWS/EC2 --metric-name CPUUtilization 
          --period 3600 --statistics Maximum --dimensions 'Name=InstanceId,Value=i-01a0f3d6ceef72a57'  --start-time 2017-04-10-T09:0 
          0:00 --end-time 2017-04-10-T10:00:00

     # aws cloudwatch get-metric-statistics --namespace AWS/EC2 --metric-name CPUUtilization 
          --period 3600 --statistics Average --dimensions 'Name=ImageId,Value=____'  --start-time 2017-04-10-T09:0 
          0:00 --end-time 2017-04-10-T10:00:00


     # aws cloudwatch get-metric-statistics --namespace AWS/EC2 --metric-name CPUUtilization 
          --period 3600 --statistics "Sum" --dimensions 'Name=AutoScalingGroupName,Value=___'  --start-time 2017-04-10-T09:0 
          0:00 --end-time 2017-04-10-T10:00:00
           
 
 
 
   III.  Summary
     we did a basic CW overview
     -quick demo
     -toured cw console
     -how to work with metrics
     
     Basic monitoring vs Detailed Monitoring
      -basic monitoring is going to give you data points in 5 minute interval
      -detailed monitoring gives you data in 1 minute intervals 
        -it incurs a cost
        -you also get the ability to do aggregation of statistics in the console and the CLI. 
      
      We saw the differences between metrics, namespaces, and dimensions.
      -metrics : are the units of measurement, or variables that we monitor.
      -Namespaces : are the containers for those metrics
      -dimensions : are  filters that we can apply against those to customize the way that the data comes back. 
      
      We viewed metrics via the CloudWatch console, as well as the CLI
      
      list-metrics: we used the list-metrics command in the CLI
      
      We looked at getting statistics for a metric via the console and the cli with the get-metrics statistics command
      - Remember that we can only go back 14 days to look at the data
      - via the cli you can also export that informat. 
      
     
IV.  Monitoring with Custom CloudWatch

IV.I Intro
   Why do this?
   prepare instances?
   Creating Custom metrics In windows
   Creating Custom metrics In Linux
   

IV.II Common Use Cases for Custom Metrics
  Mem and Disk utilization is not monitored by default
  
  You can achieve this by creating custom metric data from the EC2 instances
  
  Then you need to send this data up to CW on a periodic basis
    -Create a role to allow instance write access to CW
    - Run a script via cron to send the data peridically
    
IV.III    Preparing EC2 instances for Custom Monitoring
  Create a custom policy with Granular Permission
    AWS -> IAM -> Create Policy -> Policy Generator
       Service: CloudWatch
       Actions: GetMetricStatistics,  ListMetrics,  PutMetricData
       ARN: *

       Service: EC2
       Actions: DescribeTags
       ARN: *

       Name: CWPolicy
    AWS -> IAM -> Create Role
    
    Launch an EC2 Windows Instance
      UserData: https://gist.github.com/mikepfeiffer/a4ce6d25ae092f1a4ea97afad5879530
                Install Python and AWS CLI
                Install Chocolatey
    
    Launch a Linux instance
      UserData: https://gist.github.com/mikepfeiffer/d889b3bc78b68193e407d487b197be04
            AWS sample script
           Script
  
  IV.IV  
  
  >aws cloudwatch put-metric-data --metric-name FreeMemoryGB --namespace Windows --value 5 --region us-east-1 --dimension 'Name=Server,Value=WIN'
  
  
  
IV.VI  Summary: Custom Cloudwatch
  Use case for custom metrics
  
  No metrics by default for memory utilization or disk utilization.
  
  Preparing EC2 instances to be able to create Custom Metrics
    -IAM permissions
    -Permission to call the APIs with an IAM Role
    -set up a granular IAM policy with only the permissions we need to set custom metrics. 
    
  We moved on to using the AWS CLI on Windows to publish custom metric data
  
  Used the put-metric-data command.  Remember this for exam
  
  how to do this as well on Linux using the AWS provided Perl scripts for memory and disk utilization
  
  
    
  


